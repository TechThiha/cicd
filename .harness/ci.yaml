pipeline:
  name: ci
  identifier: ci
  projectIdentifier: CI_Test
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: Git
        repoName: cicd
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  timeout: 20m
                  identifier: Run_1
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gogetsum 
                      gogetsum --format=standard-verbose --junitfile unit-tests.xml
                      exit 0
                    privileged: false
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "*.xml"
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: <+input>
                    repo: <+input>
                    tags:
                      - <+pipeline.sequenceId>
    - stage:
        name: test2
        identifier: test2
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: Background_1
                  identifier: Background_1
                  spec:
                    connectorRef: docker_regi
                    image: techrepos/ci_tutorial:<+pipeline.sequenceId>
                    shell: Sh
              - step:
                  type: Run
                  name: Test server connection
                  identifier: Test_server_connection
                  spec:
                    connectorRef: docker_regi
                    image: curlimages/curl:7.73.0
                    shell: Sh
                    command: |-
                      sleep 10
                      curl localhost:8080
                      curl localhost:8080?Hello!_I_am_a_nice_demo!
                    privileged: true
